gather(key = "predictors",value = "predicted.value",-logit)
#plotting the graph for cheking the linearity
ggplot(my_data,aes(x =logit,y =predicted.value)) + geom_point() + geom_smooth(method ="loess") +
theme_classic() + theme_bw()+facet_wrap(~predictors,scale ="free_y")
#checking for the influential point
plot(step.model,which=4,id.n =3)
source('D:/R/heart_disease.R', encoding = 'UTF-8', echo=TRUE)
#plotting the graph for cheking the linearity
ggplot(my_data,aes(x =logit,y =predicted.value)) + geom_point() + geom_smooth(method ="loess") +
theme_classic() + theme_bw()+facet_wrap(~predictors,scale ="free_y")
#plotting the graph for cheking the linearity
ggplot(my_data,aes(x =logit,y =predicted.value)) + geom_point() + geom_smooth(method ="loess") +
theme_classic() + theme_bw()+facet_wrap(~predictors,scale ="free_y")
#plotting the graph for cheking the linearity
ggplot(my_data,aes(x =logit,y =predicted.value)) + geom_point() + geom_smooth(method ="loess") +
theme_classic() + theme_bw()+facet_wrap(~predictors,scale ="free_y")
### 성별 시각화 ###
# 막대 그래프
ggplot(heart_data, aes(x = sex)) + geom_bar(width = 0.2, fill = "green") +
geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5) + theme_bw() +
theme_classic() + ylab("number of count") + ggtitle("sex") + title.center
source('D:/R/heart_disease.R', encoding = 'UTF-8', echo=TRUE)
### 성별 시각화 ###
# 막대 그래프
ggplot(heart_data, aes(x = sex)) + geom_bar(width = 0.2, fill = "green") +
geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5) + theme_bw() +
theme_classic() + ylab("number of count") + ggtitle("sex") + title.center
### 성별 시각화 ###
# 막대 그래프
ggplot(heart_data, aes(x = sex)) + geom_bar(width = 0.2, fill = "green") +
geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5) + theme_bw() +
theme_classic() + ylab("number of count") + ggtitle("sex") + title.center
### 가슴통증 시각화 ###
# 막대 그래프
ggplot(heart_data, aes(x = chest_pain)) + geom_bar(width = 0.2, fill = "red") +
geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5) +
theme_bw() + theme_classic() + ggtitle("chest pain type") + title.center
summary(heart_data)
### 성별 시각화 ###
# 막대 그래프
ggplot(heart_data, aes(x = sex)) + geom_bar(width = 0.2, fill = "green") +
geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5) + theme_bw() +
theme_classic() + ylab("number of count") + ggtitle("sex") + title.center
print(step.model)
source('D:/R/heart_disease.R', encoding = 'UTF-8', echo=TRUE)
summary(step.model)
summary(step.model)
summary(step.model)
prob.step <- step.model %>% predict(test.data,type ="response")
predicted.class2 <- ifelse(prob.step>0.5,1,0)
mean(predicted.class2==test.data$target)
mean(predicted.class2==test.data$target)
#logistic regression diognostic
#taking only quantitative variable
model_check <- glm(target~.,data =heart_data2,family = binomial)
prob.check <- predict(model_check,type ="response")
my_data <- heart_data2 %>% select_if(is.numeric)
predictors <- colnames(my_data)
my_data <- my_data%>% mutate(logit = log(prob.check/(1-prob.check))) %>%
gather(key = "predictors",value = "predicted.value",-logit)
#plotting the graph for cheking the linearity
ggplot(my_data,aes(x =logit,y =predicted.value)) + geom_point() + geom_smooth(method ="loess") +
theme_classic() + theme_bw()+facet_wrap(~predictors,scale ="free_y")
### 휴식 중 심전도 시각화 ###
# 막대 그래프
ggplot(heart_data,aes(factor(rest_ecg))) + geom_bar(width = 0.2,fill ="orange") + theme_bw() +
theme_classic()+geom_text(stat ='count',aes(label =..count..),vjust =-0.2)+ggtitle("barplot of rest_ecg") + title.center
### 휴식 중 심전도 시각화 ###
# 막대 그래프
ggplot(heart_data,aes(factor(rest_ecg))) + geom_bar(width = 0.2,fill ="orange") + theme_bw() +
theme_classic()+geom_text(stat ='count',aes(label = ["dm","dd","dd"]),vjust =-0.2)+ggtitle("barplot of rest_ecg") + title.center
### 휴식 중 심전도 시각화 ###
# 막대 그래프
ggplot(heart_data,aes(factor(rest_ecg))) + geom_bar(width = 0.2,fill ="orange") + theme_bw() +
theme_classic()+geom_text(stat ='count',aes(label = c("dd","er","fd")),vjust =-0.2)+ggtitle("barplot of rest_ecg") + title.center
### 휴식 중 심전도 시각화 ###
# 막대 그래프
ggplot(heart_data,aes(factor(rest_ecg))) + geom_bar(width = 0.2,fill ="orange") + theme_bw() +
theme_classic()+geom_text(stat ='count',aes(label = c("dd","er","fd")),vjust =-0.2)+ggtitle("barplot of rest_ecg") + title.center
### 휴식 중 심전도 시각화 ###
# 막대 그래프
ggplot(heart_data,aes(factor(rest_ecg))) + geom_bar(width = 0.2,fill ="orange") + theme_bw() +
theme_classic()+geom_text(stat ='count',aes(label = c("dd","er","fd")),vjust =-0.2)+ggtitle("barplot of rest_ecg") + title.center
### 휴식 중 심전도 시각화 ###
# 막대 그래프
ggplot(heart_data,aes(factor(rest_ecg))) + geom_bar(width = 0.2,fill ="orange") + theme_bw() +
theme_classic()+geom_text(stat ='count',aes(label = ..count..),vjust =-0.2)+ggtitle("barplot of rest_ecg") + title.center
### 휴식 중 심전도 시각화 ###
# 막대 그래프
ggplot(heart_data,aes(factor(rest_ecg))) + geom_bar(width = 0.2,fill ="orange") + theme_bw() +
theme_classic()+geom_text(stat ='count',aes(label = c("Df","er","rew")),vjust =-0.2)+ggtitle("barplot of rest_ecg") + title.center
mean(predicted.class2==test.data$target)
prob.step <- step.model %>% predict(test.data,type ="response")
install.packages("readxl")
install.packages("readxl")
#stepwise logistic regression in R
step.model <- %>% stepAIC(trace = F)
### 혈당 시각화 ###
# 막대 그래프
ggplot(heart_data, aes(x = factor(fasting_bloodsugar))) +
geom_bar(width = 0.1,fill ="green") + geom_text(stat = 'count',aes(label =..count..),vjust =-0.5) +
theme_bw() + theme_classic() +ylab("number of count") + ggtitle("blood sugar") + title.center
source('D:/R/heart_disease.R', encoding = 'UTF-8', echo=TRUE)
summary(step.model)
summary(full.mod)
summary(step.model)
#logistic regression diognostic
#taking only quantitative variable
model_check <- glm(target~.,data =heart_data2,family = binomial)
my_data <- heart_data2 %>% select_if(is.numeric)
prob.check <- predict(model_check,type ="response")
my_data <- heart_data2 %>% select_if(is.numeric)
predictors <- colnames(my_data)
my_data <- my_data%>% mutate(logit = log(prob.check/(1-prob.check))) %>%
gather(key = "predictors",value = "predicted.value",-logit)
mean(predicted.class2==test.data$target)
predicted.class2 <- ifelse(prob.step>0.5,1,0)
summary(step.model)
prob.step <- step.model %>% predict(test.data,type ="response")
mean(predicted.class2 == test.data $ target)
#checking for the influential point
plot(step.model,which=4,id.n =3)
plot(ROCR_perf,colorize=T,print.cutoffs.at =seq(0.1,by =0.1))
#checking for the influential point
plot(step.model,which=4,id.n =3)
#plotting the graph for cheking the linearity
ggplot(my_data,aes(x =logit,y =predicted.value)) + geom_point() + geom_smooth(method ="loess") +
theme_classic() + theme_bw()+facet_wrap(~predictors,scale ="free_y")
#checking for the influential point
plot(step.model,which=4,id.n =3)
#the plot of cook_sd shows that 102 index haves higher cook_sd
#checking for the standarg residuals error
model.data <- augment(step.model) %>% mutate(index =1:n())
model.data %>% top_n(3,.cooksd)
#in these case the standard residuals error<3 so that can't be considered as a influential point
#checking for multi-collinearity
car::vif(step.model)
ROCR_Pred <- prediction(res,train.data$target)
ROCR_perf <- performance(ROCR_Pred,"tpr","fpr")
plot(ROCR_perf,colorize=T,print.cutoffs.at =seq(0.1,by =0.1))
ROCR_perf <- performance(ROCR_Pred,"tpr","fpr")
ROCR_Pred <- prediction(res,train.data$target)
#here is the final model
final.model <- glm(target~.,data =train.data,family =binomial) %>%stepAIC(trash =FALSE)
prob.final <- predict(final.model,test.data,type ="response")
predicted.class_final <- ifelse(prob.final>0.6,1,0)
mean(predicted.class_final==test.data$target)
source('D:/R/heart_disease.R', encoding = 'UTF-8', echo=TRUE)
mean(predicted.class1==test.data$target)
#logistic regression diognostic
#taking only quantitative variable
model_check <- glm(target~.,data = heart_data2, family = binomial)
prob.check <- predict(model_check,type ="response")
my_data <- heart_data2 %>% select_if(is.numeric)
my_data <- heart_data2 %>% select_if(is.numeric)
predictors <- colnames(my_data)
my_data <- my_data%>% mutate(logit = log(prob.check/(1-prob.check))) %>%
gather(key = "predictors",value = "predicted.value",-logit)
#plotting the graph for cheking the linearity
ggplot(my_data,aes(x =logit,y =predicted.value)) + geom_point() + geom_smooth(method ="loess") +
theme_classic() + theme_bw()+facet_wrap(~predictors,scale ="free_y")
#checking for the influential point
plot(step.model,which=4,id.n =3)
#checking for the influential point
plot(step.model,which=4,id.n =3)
#in these case the standard residuals error<3 so that can't be considered as a influential point
#checking for multi-collinearity
car::vif(step.model)
source('D:/R/heart_disease.R', encoding = 'UTF-8', echo=TRUE)
source('D:/R/heart_disease.R', encoding = 'UTF-8', echo=TRUE)
source('D:/R/heart_disease.R', encoding = 'UTF-8', echo=TRUE)
source('D:/R/heart_disease.R', encoding = 'UTF-8', echo=TRUE)
#in these case the standard residuals error<3 so that can't be considered as a influential point
#checking for multi-collinearity
car::vif(step.model)
#in these case the standard residuals error<3 so that can't be considered as a influential point
#checking for multi-collinearity
car::vif(step.model)
#choosing the best cut-off probabillity value to the model
res <- predict(step.model,type ="response")
ROCR_Pred <- prediction(res,train.data$target)
ROCR_perf <- performance(ROCR_Pred,"tpr","fpr")
plot(ROCR_perf,colorize=T,print.cutoffs.at =seq(0.1,by =0.1))
#here is the final model
final.model <- glm(target~., data = train.data,family =binomial) %>% stepAIC(trash =FALSE)
prob.final <- predict(final.model, test.data, type ="response")
predicted.class_final <- ifelse(prob.final > 0.6, 1, 0)
mean(predicted.class_final == test.data$target)
#the model gives a accuracy of 86.66% and used for prediction
#the model gives a accuracy of 86.66% and used for prediction
#the model gives a accuracy of 86.66% and used for prediction
#the model gives a accuracy of 86.66% and used for prediction
source('D:/R/heart_disease.R', encoding = 'UTF-8', echo=TRUE)
source('D:/R/heart_disease.R', encoding = 'UTF-8', echo=TRUE)
install.packages("readxl")
source('D:/R/heart_disease.R', encoding = 'UTF-8', echo=TRUE)
# 영향 관측지(Influential observation)
plot(step.model,which=4,id.n =3)
ROCR_Pred <- prediction(res, train.data$target)
plot(ROCR_perf,colorize=T,print.cutoffs.at =seq(0.1,by =0.1))
plot(ROCR_perf,colorize=T,print.cutoffs.at = seq(0.1,by =0.1))
#checking the model accuracy
prob <- full.mod %>% predict(test.data,type ="response")
#stepwise logistic regression in R
step.model <- full.mod %>% stepAIC(trace = F)
predicted.class2 <- ifelse(prob.step>0.5,1,0)
mean(predicted.class2 == test.data $ target)
mean(predicted.class1 == test.data$target)
mean(predicted.class2 == test.data $ target)
summary(step.model)
source('D:/R/heart_disease.R', encoding = 'UTF-8', echo=TRUE)
### 휴식 중 심전도 시각화 ###
# 막대 그래프
ggplot(heart_data,aes(factor(rest_ecg))) + geom_bar(width = 0.2,fill ="orange") + theme_bw() +
theme_classic()+geom_text(stat ='count',aes(label = ..count..),vjust =-0.2)+ggtitle("barplot of rest_ecg") + title.center
###################### EDA ######################
### 나이 시각화 ###
# 히스토그램
ggplot(heart_data, aes(x = age)) + geom_histogram(bins = 30, fill = "dodgerblue4") +
theme_bw() + theme_classic() + ggtitle("age dist") + ylab("number of people")
# 곡선 그래프
ggplot(heart_data, aes(x = age)) + geom_density(fill ="dodgerblue4") +
theme_bw() + theme_classic() + ggtitle("age dist") + ylab("number of people")
# 박스플롯
boxplot(heart_data$age, main = "age boxplot", col ="dodgerblue4", notch = T)
# Q-Q 플롯
qqPlot(heart_data$age, main = "age qqplot", grid = F)
### 성별 시각화 ###
# 막대 그래프
ggplot(heart_data, aes(x = sex)) + geom_bar(width = 0.2, fill = "green") +
geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5) + theme_bw() +
theme_classic() + ylab("number of count") + ggtitle("sex") + title.center
###################### EDA ######################
### 나이 시각화 ###
# 히스토그램
ggplot(heart_data, aes(x = age)) + geom_histogram(bins = 30, fill = "dodgerblue4") +
theme_bw() + theme_classic() + ggtitle("age dist") + ylab("number of people")
### 가슴통증 시각화 ###
# 막대 그래프
ggplot(heart_data, aes(x = chest_pain)) + geom_bar(width = 0.2, fill = "red") +
geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5) +
theme_bw() + theme_classic() + ggtitle("chest pain type") + title.center
### 휴식 중 혈압 시각화 ###
# 박스플롯
boxplot(heart_data$rest_bp, col = "purple", main = "boxplot of rest_bp", col.main="dodgerblue4")
###################### EDA ######################
### 나이 시각화 ###
# 히스토그램
ggplot(heart_data_target, aes(x = age)) + geom_histogram(bins = 30, fill = "dodgerblue4") +
theme_bw() + theme_classic() + ggtitle("age dist") + ylab("number of people")
heart_data_target = heart_data %>% filter(target==1)
###################### EDA ######################
### 나이 시각화 ###
# 히스토그램
ggplot(heart_data_target, aes(x = age)) + geom_histogram(bins = 30, fill = "dodgerblue4") +
theme_bw() + theme_classic() + ggtitle("age dist") + ylab("number of people")
source('D:/R/heart_disease.R', encoding = 'UTF-8', echo=TRUE)
###################### EDA ######################
### 나이 시각화 ###
# 히스토그램
ggplot(heart_data_target, aes(x = age)) + geom_histogram(bins = 30, fill = "dodgerblue4") +
theme_bw() + theme_classic() + ggtitle("age dist") + ylab("number of people")
###################### EDA ######################
### 나이 시각화 ###
# 히스토그램
ggplot(heart_data_target, aes(x = age)) + geom_histogram(bins = 30, fill = "dodgerblue4") +
theme_bw() + theme_classic() + ggtitle("age hist") + ylab("number of people")
###################### EDA ######################
### 나이 시각화 ###
# 히스토그램
ggplot(heart_data_target, aes(x = age)) + geom_histogram(bins = 30, fill = "dodgerblue4") +
theme_bw() + theme_classic() + ggtitle("age hist") + ylab("number of people")
###################### EDA ######################
### 나이 시각화 ###
# 히스토그램
ggplot(heart_data_target, aes(x = age)) + geom_histogram(bins = 30, fill = "dodgerblue4") +
theme_bw() + theme_classic() + ggtitle("age hist") + ylab("number of people")
###################### EDA ######################
### 나이 시각화 ###
# 히스토그램
ggplot(heart_data_target, aes(x = age)) + geom_histogram(bins = 30, fill = "dodgerblue4") +
theme_bw() + theme_classic() + ggtitle("age hist") + ylab("number of people")
# 곡선 그래프
ggplot(heart_data_target, aes(x = age)) + geom_density(fill ="dodgerblue4") +
theme_bw() + theme_classic() + ggtitle("age dist") + ylab("number of people")
###################### EDA ######################
### 나이 시각화 ###
# 히스토그램
ggplot(heart_data_target, aes(x = age)) + geom_histogram(bins = 30, fill = "dodgerblue4") +
theme_bw() + theme_classic() + ggtitle("age hist") + ylab("number of people")
# 곡선 그래프
ggplot(heart_data_target, aes(x = age)) + geom_density(fill ="dodgerblue4") +
theme_bw() + theme_classic() + ggtitle("age dist") + ylab("number of people")
# 박스플롯
boxplot(heart_data_target$age, main = "age boxplot", col ="dodgerblue4", notch = T)
# Q-Q 플롯
qqPlot(heart_data_target$age, main = "age qqplot", grid = F)
### 성별 시각화 ###
# 막대 그래프
ggplot(heart_data_target, aes(x = sex)) + geom_bar(width = 0.2, fill = "green") +
geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5) + theme_bw() +
theme_classic() + ylab("number of count") + ggtitle("sex") + title.center
### 가슴통증 시각화 ###
# 막대 그래프
ggplot(heart_data_target, aes(x = chest_pain)) + geom_bar(width = 0.2, fill = "red") +
geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5) +
theme_bw() + theme_classic() + ggtitle("chest pain type") + title.center
### 휴식 중 혈압 시각화 ###
# 박스플롯
boxplot(heart_data_target$rest_bp, col = "purple", main = "boxplot of rest_bp", col.main="dodgerblue4")
# 히스토그램
ggplot(heart_data_target, aes(rest_bp)) + geom_histogram(bins = 20, fill = "purple") +
theme_bw() + theme_classic() + ggtitle("rest_bp") + title.center
# 곡선 그래프
ggplot(heart_data_target, aes(rest_bp)) + geom_density(fill = "purple") +
theme_bw() + theme_classic() + ggtitle("density plot of resp_bp") + title.center
### 콜레스트롤 시각화 ###
# 박스플롯
boxplot(heart_data_target$chol,col = "brown",main ="boxplot of chol",col.main="dodgerblue4")
# 히스토그램
ggplot(heart_data_target,aes(chol)) + geom_histogram(bins =20,fill ="brown") + theme_bw() +
theme_classic() +ggtitle("chol") +title.center
### 성별 시각화 ###
# 막대 그래프
ggplot(heart_data_target, aes(x = sex)) + geom_bar(width = 0.2, fill = "green") +
geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5) + theme_bw() +
theme_classic() + ylab("number of count") + ggtitle("sex") + title.center
### 가슴통증 시각화 ###
# 막대 그래프
ggplot(heart_data_target, aes(x = chest_pain)) + geom_bar(width = 0.2, fill = "red") +
geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5) +
theme_bw() + theme_classic() + ggtitle("chest pain type") + title.center
### 콜레스트롤 시각화 ###
# 박스플롯
boxplot(heart_data_target$chol,col = "brown",main ="boxplot of chol",col.main="dodgerblue4")
# 곡선 그래프
ggplot(heart_data_target, aes(rest_bp)) + geom_density(fill = "purple") +
theme_bw() + theme_classic() + ggtitle("density plot of resp_bp") + title.center
### 가슴통증 시각화 ###
# 막대 그래프
ggplot(heart_data_target, aes(x = chest_pain)) + geom_bar(width = 0.2, fill = "red") +
geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5) +
theme_bw() + theme_classic() + ggtitle("chest pain type") + title.center
### 휴식 중 혈압 시각화 ###
# 박스플롯
boxplot(heart_data_target$rest_bp, col = "purple", main = "boxplot of rest_bp", col.main="dodgerblue4")
# 히스토그램
ggplot(heart_data_target,aes(chol)) + geom_histogram(bins =20,fill ="brown") + theme_bw() +
theme_classic() +ggtitle("chol") +title.center
# 곡선 그래프
ggplot(heart_data_target,aes(chol)) + geom_density(fill ="brown") + theme_bw() +
theme_classic()+ggtitle("density plot of chol") +title.center
### 혈당 시각화 ###
# 막대 그래프
ggplot(heart_data_target, aes(x = factor(fasting_bloodsugar))) +
geom_bar(width = 0.1,fill ="green") + geom_text(stat = 'count',aes(label =..count..),vjust =-0.5) +
theme_bw() + theme_classic() +ylab("number of count") + ggtitle("blood sugar") + title.center
# 곡선 그래프
ggplot(heart_data_target,aes(chol)) + geom_density(fill ="brown") + theme_bw() +
theme_classic()+ggtitle("density plot of chol") +title.center
### 휴식 중 심전도 시각화 ###
# 막대 그래프
ggplot(heart_data_target, aes(factor(rest_ecg))) + geom_bar(width = 0.2,fill ="orange") + theme_bw() +
theme_classic()+geom_text(stat ='count',aes(label = ..count..),vjust =-0.2)+ggtitle("barplot of rest_ecg") + title.center
### 최대 심장 박동 수 ###
# 히스토그램
ggplot(heart_data_target, aes(max_heartrate)) + geom_histogram(fill = "lightblue",alpha =0.5) + theme_bw()+theme_classic()
# 곡선 그래프
ggplot(heart_data_target, aes(max_heartrate)) + geom_density(fill = "lightblue",alpha =0.5) + theme_bw()+theme_classic()
# 박스플롯
boxplot(heart_data_target$max_heartrate,col ="lightblue",notch = T,main ="boxplot of the maximum heart rate")
### 운동 중 협심증 경험 시각화 ###
# 막대그래프
ggplot(heart_data_target, aes(factor(excercise_angina))) + geom_bar(width = 0.2,fill ="black") +
theme_bw() + theme_classic()+geom_text(stat ='count',aes(label =..count..),vjust =-0.2) +
ggtitle("barplot of exercise angina") +title.center
### ST 분절(ST Segment Depression) 형태 시각화 ###
# 막대그래프
ggplot(heart_data_target, aes(factor(slope))) +
geom_bar(width = 0.2,fill ="dodgerblue4") + theme_bw() +
theme_classic()+geom_text(stat ='count',aes(label =..count..),vjust =-0.2) +
ggtitle("barplot of slope") +title.center
### 지중해빈혈 여부 시각화 ###
# 막대그래프
ggplot(heart_data_target, aes(factor(thal))) + geom_bar(width = 0.2,fill ="red") + theme_bw() +
theme_classic()+geom_text(stat ='count',aes(label =..count..),vjust =-0.2)+ggtitle("barplot of thal") + title.center
### 주요 혈관 수 시각화 ###
# 막대그래프
ggplot(heart_data_target, aes(factor(n_major_vasel))) + geom_bar(width = 0.2,fill ="gray") +
theme_bw() + theme_classic()+geom_text(stat ='count',aes(label =..count..),vjust =-0.2) +
ggtitle("barplot of n_major_vassel") +title.center
### 지중해빈혈 여부 시각화 ###
# 막대그래프
ggplot(heart_data_target, aes(factor(thal))) + geom_bar(width = 0.2,fill ="red") + theme_bw() +
theme_classic()+geom_text(stat ='count',aes(label =..count..),vjust =-0.2)+ggtitle("barplot of thal") + title.center
head(heart_data)
summary(heart_data_target)
source('D:/R/heart_disease.R', encoding = 'UTF-8', echo=TRUE)
title.center <- theme(plot.title = element_text(hjust = 0.5))
head(heart_data)
heart_data$chest_pain <- as.factor(heart_data$chest_pain)
summary(heart_data_target)
table(heart_data_target$chest_pain)
table(heart_data_target$chest_pain)
### 성별 시각화 ###
# 막대 그래프
pie(heart_data_target)
### 성별 시각화 ###
# 막대 그래프
pie(heart_data_target, labels=heart_data_target$sex)
### 성별 시각화 ###
# 막대 그래프
ggplot(heart_data_target, aes(x = sex)) + geom_bar(width = 0.2, fill = "green") +
geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5) + theme_bw() +
theme_classic() + ylab("number of count") + ggtitle("sex") + title.center
source('D:/R/heart_disease.R', encoding = 'UTF-8', echo=TRUE)
source('D:/R/heart_disease.R', encoding = 'UTF-8', echo=TRUE)
library(ggplot2)
library(readxl)
library(dplyr)
library(tidyr)
###################### LOAD DATA ######################
heart_data <- read.csv("./input/heart.csv")
name <- c("age", "sex", "chest_pain", "rest_bp", "chol", "fasting_bloodsugar", "rest_ecg", "max_heartrate", "excercise_angina", "slope", "n_major_vasel","thal","target")
heart_data2 <- heart_data
head(heart_data)
###################### DATA MUNGING ######################
name <- c("age","sex","chest_pain","rest_bp","chol","fasting_bloodsugar",
"rest_ecg","max_heartrate","excercise_angina","ST_depression","slope","n_major_vasel","thal","target")
names(heart_data) <- name
heart_data$sex <- as.character(heart_data$sex)
heart_data$sex <- ifelse(heart_data$sex=="0",'female','male')
heart_data$chest_pain <- as.factor(heart_data$chest_pain)
title.center <- theme(plot.title = element_text(hjust = 0.5))
heart_data_target = heart_data %>% filter(target==1)
head(heart_data)
str(heart_data)
summary(heart_data_target)
###################### EDA ######################
### 나이 시각화 ###
# 히스토그램
ggplot(heart_data_target, aes(x = age)) + geom_histogram(bins = 30, fill = "dodgerblue4") +
theme_bw() + theme_classic() + ggtitle("age hist") + ylab("number of people")
# 곡선 그래프
ggplot(heart_data_target, aes(x = age)) + geom_density(fill ="dodgerblue4") +
theme_bw() + theme_classic() + ggtitle("age dist") + ylab("number of people")
# 박스플롯
boxplot(heart_data_target$age, main = "age boxplot", col ="dodgerblue4", notch = T)
# Q-Q 플롯
qqPlot(heart_data_target$age, main = "age qqplot", grid = F)
### 성별 시각화 ###
# 막대 그래프
ggplot(heart_data_target, aes(x = sex)) + geom_bar(width = 0.2, fill = "green") +
geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5) + theme_bw() +
theme_classic() + ylab("number of count") + ggtitle("sex") + title.center
table(heart_data_target$chest_pain)
### 가슴통증 시각화 ###
# 막대 그래프
ggplot(heart_data_target, aes(x = chest_pain)) + geom_bar(width = 0.2, fill = "red") +
geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5) +
theme_bw() + theme_classic() + ggtitle("chest pain type") + title.center
### 휴식 중 혈압 시각화 ###
# 박스플롯
boxplot(heart_data_target$rest_bp, col = "purple", main = "boxplot of rest_bp", col.main="dodgerblue4")
# 히스토그램
ggplot(heart_data_target, aes(rest_bp)) + geom_histogram(bins = 20, fill = "purple") +
theme_bw() + theme_classic() + ggtitle("rest_bp") + title.center
# 곡선 그래프
ggplot(heart_data_target, aes(rest_bp)) + geom_density(fill = "purple") +
theme_bw() + theme_classic() + ggtitle("density plot of resp_bp") + title.center
### 콜레스트롤 시각화 ###
# 박스플롯
boxplot(heart_data_target$chol,col = "brown",main ="boxplot of chol",col.main="dodgerblue4")
# 히스토그램
ggplot(heart_data_target,aes(chol)) + geom_histogram(bins =20,fill ="brown") + theme_bw() +
theme_classic() +ggtitle("chol") +title.center
# 곡선 그래프
ggplot(heart_data_target,aes(chol)) + geom_density(fill ="brown") + theme_bw() +
theme_classic()+ggtitle("density plot of chol") +title.center
table(heart_data_target$fasting_bloodsugar)
### 혈당 시각화 ###
# 막대 그래프
ggplot(heart_data_target, aes(x = factor(fasting_bloodsugar))) +
geom_bar(width = 0.1,fill ="green") + geom_text(stat = 'count',aes(label =..count..),vjust =-0.5) +
theme_bw() + theme_classic() +ylab("number of count") + ggtitle("blood sugar") + title.center
### 휴식 중 심전도 시각화 ###
# 막대 그래프
ggplot(heart_data_target, aes(factor(rest_ecg))) + geom_bar(width = 0.2,fill ="orange") + theme_bw() +
theme_classic()+geom_text(stat ='count',aes(label = ..count..),vjust =-0.2)+ggtitle("barplot of rest_ecg") + title.center
### 최대 심장 박동 수 ###
# 히스토그램
ggplot(heart_data_target, aes(max_heartrate)) + geom_histogram(fill = "lightblue",alpha =0.5) + theme_bw()+theme_classic()
# 곡선 그래프
ggplot(heart_data_target, aes(max_heartrate)) + geom_density(fill = "lightblue",alpha =0.5) + theme_bw()+theme_classic()
# 박스플롯
boxplot(heart_data_target$max_heartrate,col ="lightblue",notch = T,main ="boxplot of the maximum heart rate")
### 운동 중 협심증 경험 시각화 ###
# 막대그래프
ggplot(heart_data_target, aes(factor(excercise_angina))) + geom_bar(width = 0.2,fill ="black") +
theme_bw() + theme_classic()+geom_text(stat ='count',aes(label =..count..),vjust =-0.2) +
ggtitle("barplot of exercise angina") +title.center
### ST 분절(ST Segment Depression) 형태 시각화 ###
# 막대그래프
ggplot(heart_data_target, aes(factor(slope))) +
geom_bar(width = 0.2,fill ="dodgerblue4") + theme_bw() +
theme_classic()+geom_text(stat ='count',aes(label =..count..),vjust =-0.2) +
ggtitle("barplot of slope") +title.center
### 지중해빈혈 여부 시각화 ###
# 막대그래프
ggplot(heart_data_target, aes(factor(thal))) + geom_bar(width = 0.2,fill ="red") + theme_bw() +
theme_classic()+geom_text(stat ='count',aes(label =..count..),vjust =-0.2)+ggtitle("barplot of thal") + title.center
source('D:/R/heart_disease.R', encoding = 'UTF-8', echo=TRUE)
